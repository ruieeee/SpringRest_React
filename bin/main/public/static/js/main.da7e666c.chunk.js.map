{"version":3,"sources":["conponent/parts/Header.tsx","conponent/parts/Footer.tsx","App.tsx","reportWebVitals.ts","conponent/page/Login.tsx","conponent/parts/TaskItems.tsx","conponent/page/TaskApp.tsx","reducers/index.ts","conponent/page/Reducer.tsx","index.tsx","css/App.module.css"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","props","useState","anchorEl","setAnchorEl","handleClose","classes","className","AppBar","position","Toolbar","IconButton","edge","color","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","MenuItem","to","Typography","variant","Box","textAlign","Button","footer","bottom","Footer","App","posts","setPosts","useEffect","fetch","method","then","res","json","data","Grid","container","item","xs","map","post","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Login","TaskItems","taskId","taskTitle","creatDate","userId","filed","marginTop","marginButtom","TaskApp","input","setInput","console","log","FormControl","TextField","label","value","onChange","e","target","disabled","styles","app__icon","List","task","complete","like","events","state","action","type","body","length","find","filter","deleteId","Reduer","columns","field","headerName","width","editable","sortable","renderCell","params","paramsId","getValue","startIcon","cellDelete","cellValues","paramsRow","row","cellEdit","useReducer","reducer","dispatch","setTitle","setBody","eventCheck","setEventCheck","unCreatabl","allDelete","window","confirm","Id","select","selectDelete","reducerDivCommon","fullWidth","reducerTableCommon","rows","checkboxSelection","disableSelectionOnClick","onSelectionModelChange","model","components","ReactDOM","render","exact","path","component","Reducer","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.da7e666c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  title: String;\r\n}\r\n\r\nconst Header: React.FC<Props> = (props: Props) => {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={handleClick}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem>\r\n              <Link to=\"/TaskApp\">TaskApp</Link>\r\n            </MenuItem>\r\n            <MenuItem>\r\n              <Link to=\"/Reducer\">Reducer</Link>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n          </Menu>\r\n\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Box textAlign=\"left\">{props.title}</Box>\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    //position: \"absolute\" /*←絶対位置*/,\r\n    bottom: 0 /*下に固定*/,\r\n  },\r\n}));\r\n\r\nconst Footer: React.FC = (props: any) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.footer}>\r\n      <footer>\r\n        　<p>&copy; react. 2021.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./conponent/parts/Header\";\nimport \"./App.css\";\nimport Footer from \"./conponent/parts/Footer\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Link } from \"react-router-dom\";\n\ninterface Saple {\n  month: String;\n  name: String;\n  color: String;\n}\n\nconst App: React.FC = (props: any) => {\n  const [posts, setPosts] = useState<Saple[]>([]);\n\n  //第一引数:関数、第二引数:コールバックを設定 ( [name] を設定したらnameの状態が変化する旅呼ばれる)\n  //レンダリングの後、レンダリングされるたびに呼ばれる\n  //第二引数にからの配列を入れることで最初のレンダリング時だけに呼ばれる\n  useEffect(() => {\n    //fetch(input: RequestInfo, init?: RequestInit)のreturn typeはPromise<Response> になる\n    fetch(\"http://localhost:8090/api/getBirthStone\", { method: \"GET\" })\n      .then((res) => res.json())\n      .then((data) => {\n        setPosts(data);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header title=\"Menu\" />\n      <h1>Menu</h1>\n\n      <Grid container spacing={3}>\n        <Grid item xs={3}>\n          <Link to={\"/TaskApp\"}>\n            <h1>Task App</h1>\n          </Link>\n        </Grid>\n        <Grid item xs={3}>\n          <Link to={\"/Reducer\"}>\n            <h1>Reducer</h1>\n          </Link>\n        </Grid>\n        <Grid item xs={3}>\n          <h1>test</h1>\n        </Grid>\n        <Grid item xs={3}>\n          <h1>test</h1>\n        </Grid>\n      </Grid>\n\n      <p>app</p>\n      <div>\n        <ul>\n          {posts.map((post) => (\n            <p>\n              {/* name:{post.name} month:{post.month} color:{post.color} */}\n            </p>\n          ))}\n        </ul>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Login: React.FC = (props: any) => {\r\n  return (\r\n    <div className=\"App\">\r\n      <p></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n//import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n//const useStyles = makeStyles((theme) => ({}));\r\n\r\ninterface task {\r\n  taskId: Number;\r\n  taskTitle: String;\r\n  creatDate: String;\r\n  userId: String;\r\n  complete: Boolean;\r\n  like: Boolean;\r\n}\r\n\r\nconst TaskItems: React.FC<task> = (props: task) => {\r\n  //const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <p>{props.taskId}</p>\r\n      <p>{props.taskTitle}</p>\r\n      <p>{props.creatDate}</p>\r\n      <p>{props.userId}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskItems;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../parts/Header\";\r\nimport Footer from \"../parts/Footer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { TextField, List } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AddToPhotosIcon from \"@material-ui/icons/AddToPhotos\";\r\nimport styles from \"../../css/App.module.css\";\r\nimport TaskItems from \"../parts/TaskItems\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  filed: {\r\n    marginTop: 30,\r\n    marginButtom: 20,\r\n  },\r\n}));\r\n\r\ninterface task {\r\n  taskId: Number;\r\n  taskTitle: String;\r\n  creatDate: String;\r\n  userId: String;\r\n  complete: Boolean;\r\n  like: Boolean;\r\n}\r\n\r\nconst TaskApp: React.FC<task> = (props: any) => {\r\n  const classes = useStyles();\r\n\r\n  const [input, setInput] = useState(\"\");\r\n  const [posts, setPosts] = useState<task[]>([]);\r\n\r\n  const newTask = () => {};\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8090/api/taskItems\", { method: \"GET\" })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setPosts(data);\r\n        console.log(\"aaaaaaa\");\r\n        console.log(posts);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header title=\"TaskApp\" />\r\n      <Link to=\"/\">メニュー</Link>\r\n      <p>TaskApp</p>\r\n\r\n      <FormControl>\r\n        <TextField\r\n          className={classes.filed}\r\n          label=\"New task ?\"\r\n          value={input}\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n            setInput(e.target.value)\r\n          }\r\n        />\r\n      </FormControl>\r\n      <button disabled={!input} onClick={newTask} className={styles.app__icon}>\r\n        <AddToPhotosIcon />\r\n      </button>\r\n\r\n      <br />\r\n      <List>\r\n        {posts.map((task) => (\r\n          <TaskItems\r\n            taskId={task.taskId}\r\n            taskTitle={task.taskTitle}\r\n            creatDate={task.creatDate}\r\n            userId={task.userId}\r\n            complete={task.complete}\r\n            like={task.like}\r\n          />\r\n        ))}\r\n      </List>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskApp;\r\n","//イベント作成\r\n\r\n// interface EventAction {\r\n//   type: String;\r\n//   title: String | null;\r\n//   body: String | null;\r\n//   deleteId: number | null;\r\n//   selectList: number[];\r\n// }\r\n\r\ninterface Event {\r\n  id: number;\r\n  title: String;\r\n  body: String;\r\n}\r\n\r\nconst events = (state: Event[], action: any) => {\r\n  switch (action.type) {\r\n    case \"CREATE_EVENT\":\r\n      const event = { title: action.title, body: action.body };\r\n      const length = state.length;\r\n      let id = length === 0 ? 1 : state[length - 1].id + 1;\r\n      return [...state, { id: id, ...event }]; //最初から持っていたstateを格納してからactionの内容を格納する\r\n    case \"EDIT_EVENT\":\r\n      state.find((event) => {\r\n        if (event.id === action.id) {\r\n          event.title = action.title;\r\n          event.body = action.body;\r\n        }\r\n      });\r\n      console.log(state);\r\n      return state;\r\n    case \"DELETE_EVENT\":\r\n      return state.filter((event) => event.id !== action.deleteId);\r\n    case \"DELETE_ALL_EVENT\":\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default events;\r\n","import React, { useState, useReducer } from \"react\";\r\nimport Header from \"../parts/Header\";\r\nimport Footer from \"../parts/Footer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Container, FormControl } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  DataGrid,\r\n  GridColDef,\r\n  GridToolbarContainer,\r\n  GridToolbarExport,\r\n  GridCellParams,\r\n  GridRowData,\r\n} from \"@material-ui/data-grid\";\r\nimport reducer from \"../../reducers/index\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport styles from \"../../css/App.module.css\";\r\n\r\nconst Reduer: React.FC = (props: any) => {\r\n  const eventCustomToolbar = () => {\r\n    return (\r\n      <GridToolbarContainer>\r\n        <GridToolbarExport />\r\n        <Button variant=\"contained\" onClick={selectDelete}>\r\n          選択を削除する\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={allDelete}\r\n          disabled={state.length === 0}\r\n        >\r\n          全削除\r\n        </Button>\r\n      </GridToolbarContainer>\r\n    );\r\n  };\r\n\r\n  const columns: GridColDef[] = [\r\n    { field: \"id\", headerName: \"ID\", width: 110 },\r\n    {\r\n      field: \"title\",\r\n      headerName: \"Title\",\r\n      width: 170,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"body\",\r\n      headerName: \"Body\",\r\n      width: 250,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"delete\",\r\n      headerName: \"\",\r\n      sortable: false,\r\n      width: 130,\r\n      renderCell: (params: GridCellParams) => {\r\n        const paramsId = params.getValue(params.id, \"id\");\r\n        return (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            startIcon={<DeleteIcon />}\r\n            onClick={(event: any) => cellDelete(paramsId, false)}\r\n          >\r\n            delete\r\n          </Button>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"edit\",\r\n      headerName: \"\",\r\n      sortable: false,\r\n      renderCell: (cellValues) => {\r\n        //const paramsId = cellValues.id;\r\n        const paramsRow: GridRowData = cellValues.row;\r\n        return (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<EditIcon />}\r\n            onClick={(event: any) => cellEdit(paramsRow)}\r\n          >\r\n            Edit\r\n          </Button>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const events = [\r\n    { id: 1, title: \"test\", body: \"testBody\" },\r\n    { id: 2, title: \"テスト\", body: \"テストボディ\" },\r\n  ];\r\n\r\n  const [state, dispatch] = useReducer(reducer, events);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [eventCheck, setEventCheck] = useState<number[]>([]);\r\n  const unCreatabl: boolean = title === \"\" || body === \"\";\r\n\r\n  //stateとdisptchが返ってくる\r\n  //第一引数:作成したReducer 第二引数:デフォルトの状態としてどうしたいか 第三引数:初期化時のコールバック\r\n  //const [state, dispatch] = useReducer(reducer, initialArg, init);\r\n\r\n  const addEvent = () => {\r\n    dispatch({ type: \"CREATE_EVENT\", title, body });\r\n    setTitle(\"\");\r\n    setBody(\"\");\r\n    console.log(\"CREATE_EVENT\");\r\n  };\r\n\r\n  const allDelete = () => {\r\n    if (window.confirm(\"全て削除しても良いですか?\")) {\r\n      dispatch({ type: \"DELETE_ALL_EVENT\" });\r\n      console.log(\"DELETE_ALL_EVENT\");\r\n    }\r\n  };\r\n\r\n  const cellDelete = (Id: any, select: boolean) => {\r\n    if (select !== true) {\r\n      window.confirm(\"id:\" + Id + \" を削除しても良いですか?\");\r\n      dispatch({ type: \"DELETE_EVENT\", deleteId: Id });\r\n      console.log(\"DELETE_EVENT\");\r\n    } else {\r\n      dispatch({ type: \"DELETE_EVENT\", deleteId: Id });\r\n      console.log(\"DELETE_EVENT\");\r\n    }\r\n  };\r\n  const selectDelete = () => {\r\n    if (window.confirm(\"選択を削除しても良いですか?\")) {\r\n      eventCheck.map((res) => cellDelete(res, true));\r\n    }\r\n  };\r\n\r\n  const cellEdit = (params: GridRowData) => {\r\n    dispatch({\r\n      type: \"EDIT_EVENT\",\r\n      id: params.id,\r\n      title: params.title,\r\n      body: params.body,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header title=\"Reducer\" />\r\n\r\n      <div className={styles.reducerDivCommon}>\r\n        <Link to=\"/\">メニュー</Link>\r\n        <br />\r\n        <h1>イベント作成フォーム</h1>\r\n\r\n        <FormControl fullWidth>\r\n          <Grid>\r\n            <Grid item xs>\r\n              <TextField\r\n                label=\"Title\"\r\n                value={title}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  setTitle(e.target.value)\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid>\r\n              <TextField\r\n                label=\"Body\"\r\n                value={body}\r\n                fullWidth\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  setBody(e.target.value)\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={addEvent}\r\n                disabled={unCreatabl}\r\n              >\r\n                イベントを作成する\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </FormControl>\r\n      </div>\r\n      <br />\r\n      <div className={styles.reducerTableCommon}>\r\n        <h3>イベント一覧</h3>\r\n        <DataGrid\r\n          rows={state}\r\n          columns={columns}\r\n          checkboxSelection\r\n          disableSelectionOnClick\r\n          onSelectionModelChange={(model: any) => setEventCheck(model)}\r\n          components={{\r\n            Toolbar: eventCustomToolbar,\r\n          }}\r\n        />\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div className={styles.reducerTableCommon}>\r\n        <h3>操作ログ</h3>\r\n        <Button variant=\"contained\" color=\"secondary\">\r\n          全ての操作ログ削除\r\n        </Button>\r\n        <DataGrid\r\n          rows={events}\r\n          columns={columns}\r\n          checkboxSelection\r\n          disableSelectionOnClick\r\n        />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reduer;\r\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport Login from \"./conponent/page/Login\";\nimport TaskApp from \"./conponent/page/TaskApp\";\nimport Reducer from \"./conponent/page/Reducer\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route exact path=\"/\" component={App} />\n    <Route exact path=\"/login\" component={Login} />\n    <Route exact path=\"/taskApp\" component={TaskApp} />\n    <Route exact path=\"/Reducer\" component={Reducer} />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app__icon\":\"App_app__icon__26c99\",\"reducerDivCommon\":\"App_reducerDivCommon__9_UYK\",\"reducerTableCommon\":\"App_reducerTableCommon__3JpAl\"};"],"sourceRoot":""}