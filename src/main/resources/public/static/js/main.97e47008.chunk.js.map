{"version":3,"sources":["css/App.module.css","conponent/parts/Header.tsx","conponent/parts/Footer.tsx","App.tsx","reportWebVitals.ts","conponent/page/Login.tsx","conponent/parts/taskapp/TaskListDialog.tsx","conponent/parts/taskapp/TaskItems.tsx","conponent/parts/taskapp/AddTaskItem.tsx","conponent/parts/taskapp/TaskList.tsx","conponent/page/TaskApp.tsx","reducers/index.ts","conponent/page/Reducer.tsx","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","props","useState","anchorEl","setAnchorEl","handleClose","classes","className","AppBar","position","Toolbar","IconButton","edge","color","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","MenuItem","to","Typography","variant","Box","textAlign","Button","footer","bottom","Footer","App","users","setusers","useEffect","console","log","func","a","fetch","url","method","then","res","json","data","Grid","container","item","xs","map","user","userId","userName","mail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Login","TaskListDialog","setOpen","listName","setListName","unCreatabl","isTestErr","setIsTestErr","param","addList","catch","err","Dialog","DialogTitle","DialogContent","DialogContentText","TextField","error","label","helperText","fullWidth","onChange","e","target","value","length","autoFocus","margin","type","DialogActions","disabled","fetcher","r","TaskItems","respons","listId","useSWR","refreshInterval","items","isLoading","isError","useTaskList","undefined","taskTitle","deadline","AddTaskItems","setTaskTitle","isTitleErr","setIsTitleErr","taskBody","setTaskBody","untitle","Date","selectedDate","setSelectedDate","isDeadLine","setIsDeadLine","addTask","handleDateChange","date","Tooltip","Fab","FormControlLabel","control","Switch","checked","prev","Collapse","in","utils","DateFnsUtils","format","KeyboardButtonProps","list","display","backgroundColor","height","width","TaskListComponent","isloading","setIsloading","deleteFetch","listTitle","window","confirm","CircularProgress","AddTaskItem","lists","TaskApp","listItem","TaskList","events","state","action","body","find","filter","deleteId","Reduer","columns","field","headerName","editable","sortable","renderCell","params","paramsId","getValue","startIcon","cellDelete","cellValues","paramsRow","row","cellEdit","useReducer","reducer","dispatch","setTitle","setBody","eventCheck","setEventCheck","allDelete","Id","select","selectDelete","styles","reducerDivCommon","FormControl","reducerTableCommon","rows","checkboxSelection","disableSelectionOnClick","onSelectionModelChange","model","components","ReactDOM","render","exact","path","component","Reducer","document","getElementById"],"mappings":"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","file":"static/js/main.97e47008.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app__icon\":\"App_app__icon__1GHi0\",\"reducerDivCommon\":\"App_reducerDivCommon__yoM-F\",\"reducerTableCommon\":\"App_reducerTableCommon__Cdlr8\"};","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  title: String;\r\n}\r\n\r\nconst Header: React.FC<Props> = (props: Props) => {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={handleClick}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem>\r\n              <Link to=\"/TaskApp\">TaskApp</Link>\r\n            </MenuItem>\r\n            <MenuItem>\r\n              <Link to=\"/Reducer\">Reducer</Link>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n          </Menu>\r\n\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            <Box textAlign=\"left\">{props.title}</Box>\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  footer: {\r\n    //position: \"absolute\" /*←絶対位置*/,\r\n    bottom: 0 /*下に固定*/,\r\n  },\r\n}));\r\n\r\nconst Footer: React.FC = (props: any) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.footer}>\r\n      <footer>\r\n        　<p>&copy; react. 2021.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"./conponent/parts/Header\";\r\nimport \"./App.css\";\r\nimport Footer from \"./conponent/parts/Footer\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Users from \"./interface/Users\";\r\nimport axios from \"axios\";\r\n\r\nconst url = \"http://localhost:8090/api\";\r\n\r\nconst App: React.FC = (props: any) => {\r\n  const [users, setusers] = useState<Users[]>([]);\r\n\r\n  //第一引数:関数、第二引数:コールバックを設定 ( [name] を設定したらnameの状態が変化する旅呼ばれる)\r\n  //レンダリングの後、レンダリングされるたびに呼ばれる\r\n  //第二引数にからの配列を入れることで最初のレンダリング時だけに呼ばれる\r\n  useEffect(() => {\r\n    console.log(\"effect\");\r\n    const func = async () => {\r\n      await fetch(url + \"/users\", { method: \"GET\" })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setusers(data);\r\n        });\r\n    };\r\n    func();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header title=\"Menu\" />\r\n      <h1>Menu</h1>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={3}>\r\n          <Link to={\"/TaskApp\"}>\r\n            <h1>Task App</h1>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Link to={\"/Reducer\"}>\r\n            <h1>Reducer</h1>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <h1>test</h1>\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <h1>test</h1>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <p>app</p>\r\n      <div>\r\n        <ul>\r\n          {users.map((user) => (\r\n            <p>\r\n              id:{user.userId} name:{user.userName} mail:{user.mail}\r\n            </p>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Login: React.FC = (props: any) => {\r\n  return (\r\n    <div className=\"App\">\r\n      <p></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst url = \"http://localhost:8090/api\";\r\n\r\nconst TaskListDialog: React.FC = (props) => {\r\n  // const queryClient = useQueryClient();\r\n  const url = \"http://localhost:8090/api\";\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [listName, setListName] = useState<String>(\"\");\r\n\r\n  const unCreatabl: boolean = listName === \"\";\r\n  const [isTestErr, setIsTestErr] = useState(false);\r\n\r\n  const param = `?title=${listName}&userId=1`;\r\n  const addList = async () => {\r\n    console.log(\"test\");\r\n    return await fetch(url + \"/tasklists\" + param, { method: \"POST\" })\r\n      .then((res) => res.json())\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  // const mutataion = useMutation((listName) =>\r\n  //   axios.post(url + \"/tasklists\", { title: listName, userId: 1 })\r\n  // );\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setIsTestErr(false);\r\n  };\r\n\r\n  const listPost = () => {\r\n    if (listName.length < 21) {\r\n      addList();\r\n      handleClose();\r\n    } else {\r\n      setListName(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        リストを作成する\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">リストの作成</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            タスクをまとめるリストを作成してください\r\n          </DialogContentText>\r\n          {isTestErr ? (\r\n            <TextField\r\n              error\r\n              label=\"Error\"\r\n              helperText=\"20文字以内にしてください\"\r\n              fullWidth\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                setListName(e.target.value);\r\n                if (listName.length < 21 && listName.length > 0)\r\n                  setIsTestErr(false);\r\n              }}\r\n            />\r\n          ) : (\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              label=\"タスクリスト\"\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                setListName(e.target.value);\r\n                if (listName.length > 21) setIsTestErr(true);\r\n              }}\r\n            />\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            キャンセル\r\n          </Button>\r\n          <Button\r\n            onClick={listPost}\r\n            disabled={unCreatabl || isTestErr}\r\n            color=\"primary\"\r\n          >\r\n            作成\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskListDialog;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport useSWR, { SWRConfig } from \"swr\";\r\n//import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n//const useStyles = makeStyles((theme) => ({}));\r\n\r\ninterface Props {\r\n  listId: number;\r\n}\r\n\r\ninterface TaskItem {\r\n  taskId: number;\r\n  listId: number;\r\n  taskTitle: String;\r\n  taskBody: String;\r\n  deadline: Date;\r\n  createDate: Date;\r\n  complete: boolean;\r\n  favorite: boolean;\r\n}\r\n\r\nconst isTaskListApiResnpose = (respons: any): respons is TaskItem[] => {\r\n  return respons !== undefined;\r\n};\r\n\r\nconst fetcher = (url: String) =>\r\n  fetch(`http://localhost:8090` + url).then((r) => r.json());\r\n\r\nfunction useTaskList(listId: number) {\r\n  const { data, error } = useSWR(`/api/tasklists/${listId}/items`, fetcher, {\r\n    refreshInterval: 5000,\r\n  });\r\n  return {\r\n    items: data,\r\n    isLoading: !error && !data,\r\n    isError: error,\r\n  };\r\n}\r\n\r\nconst TaskItems: React.FC<Props> = (props: Props) => {\r\n  const { items, isLoading, isError } = useTaskList(props.listId);\r\n  //const classes = useStyles();\r\n  console.log(items);\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <></>\r\n      ) : isTaskListApiResnpose(items) ? (\r\n        items.map((item: TaskItem) => {\r\n          return (\r\n            <p>\r\n              {item.taskTitle}deadline:{item.deadline}\r\n            </p>\r\n          );\r\n        })\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskItems;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport {\r\n  FormControlLabel,\r\n  Collapse,\r\n  TextField,\r\n  Tooltip,\r\n  Fab,\r\n  Switch,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nconst url = \"http://localhost:8090/api\";\r\n\r\ninterface Props {\r\n  listId: number;\r\n}\r\n\r\nconst AddTaskItems: React.FC<Props> = (props: Props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [taskTitle, setTaskTitle] = useState<String>(\"\");\r\n  const [isTitleErr, setIsTitleErr] = useState(false);\r\n  const [taskBody, setTaskBody] = useState<String>(\"\");\r\n  const untitle: boolean = taskTitle === \"\";\r\n\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n  const [isDeadLine, setIsDeadLine] = useState(false);\r\n  console.log(\"test\" + selectedDate);\r\n\r\n  const param = `?title=${taskTitle}&body=${taskBody}&deadline=${selectedDate}&listId=${props.listId}`;\r\n  const addTask = async () => {\r\n    return await fetch(url + `/tasklists/additem${param}`, { method: \"POST\" })\r\n      .then((res) => res.json())\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setIsDeadLine(false);\r\n  };\r\n\r\n  const taskPost = () => {\r\n    if (isDeadLine === false) setSelectedDate(null);\r\n    addTask();\r\n    handleClose();\r\n  };\r\n\r\n  const handleDateChange = (date: Date | null) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleDeadLineChange = () => {\r\n    setIsDeadLine((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Tooltip title=\"タスクの追加\" aria-label=\"add\">\r\n        <Fab color=\"primary\" onClick={handleClickOpen}>\r\n          <AddIcon />\r\n        </Fab>\r\n      </Tooltip>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">新しいタスク</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            タスクのタイトル,詳細,時間を入力してください\r\n          </DialogContentText>\r\n\r\n          {\r\n            //タイトル入力\r\n            isTitleErr ? (\r\n              <TextField\r\n                error\r\n                id=\"standard-error-helper-text\"\r\n                label=\"Error\"\r\n                value={taskTitle}\r\n                helperText=\"50文字以内にしてください\"\r\n                fullWidth\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                  setTaskTitle(e.target.value);\r\n                  if (taskTitle.length < 51 && taskTitle.length > 0)\r\n                    setIsTitleErr(false);\r\n                }}\r\n              />\r\n            ) : (\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                label=\"タイトル\"\r\n                type=\"text\"\r\n                fullWidth\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                  setTaskTitle(e.target.value);\r\n                  if (taskTitle.length > 51) setIsTitleErr(true);\r\n                }}\r\n              />\r\n            )\r\n          }\r\n\r\n          {\r\n            //詳細入力\r\n            <TextField\r\n              margin=\"dense\"\r\n              label=\"詳細\"\r\n              type=\"text\"\r\n              fullWidth\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                setTaskBody(e.target.value);\r\n              }}\r\n            />\r\n          }\r\n          <FormControlLabel\r\n            control={\r\n              <Switch checked={isDeadLine} onChange={handleDeadLineChange} />\r\n            }\r\n            label=\"期限\"\r\n          />\r\n          <br />\r\n          <Collapse in={isDeadLine}>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                label=\"期限(日)\"\r\n                format=\"yyyy/MM/dd\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change date\",\r\n                }}\r\n              />\r\n              <br />\r\n              <KeyboardTimePicker\r\n                margin=\"normal\"\r\n                label=\"期限(時間)\"\r\n                value={selectedDate}\r\n                onChange={handleDateChange}\r\n                KeyboardButtonProps={{\r\n                  \"aria-label\": \"change time\",\r\n                }}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Collapse>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            キャンセル\r\n          </Button>\r\n          <Button\r\n            onClick={taskPost}\r\n            disabled={untitle || isTitleErr}\r\n            color=\"primary\"\r\n          >\r\n            作成\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTaskItems;\r\n","import { Button } from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TaskItems from \"./TaskItems\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport AddTaskItems from \"./AddTaskItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  list: {\r\n    display: \"inline-block\",\r\n    margin: \"10px 30px\",\r\n    backgroundColor: \"#e7efff\",\r\n    height: \"300px\",\r\n    width: \"180px\",\r\n  },\r\n}));\r\n\r\ninterface TaskList {\r\n  listId: number;\r\n  userId: number;\r\n  listTitle: String;\r\n}\r\n\r\nconst url = \"http://localhost:8090\";\r\n\r\nconst TaskListComponent: React.FC<TaskList> = (props: TaskList) => {\r\n  const classes = useStyles();\r\n  const [isloading, setIsloading] = useState(false);\r\n\r\n  const deleteFetch = async (id: number) => {\r\n    setIsloading(true);\r\n    await fetch(`${url}/api/tasklists/${id}`, {\r\n      method: \"DELETE\",\r\n    }).then((r) => {\r\n      r.json();\r\n      setIsloading(false);\r\n    });\r\n  };\r\n\r\n  //const classes = useStyles();\r\n\r\n  const deleteList = () => {\r\n    if (window.confirm(`リスト:${props.listTitle}を削除します`)) {\r\n      deleteFetch(props.listId);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.list}>\r\n      <span>{props.listTitle}</span>\r\n      <Tooltip title=\"リストの削除\">\r\n        <IconButton aria-label=\"delete\" onClick={deleteList}>\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      <TaskItems listId={props.listId} />\r\n\r\n      {isloading ? <CircularProgress /> : <></>}\r\n      <br />\r\n      <AddTaskItems listId={props.listId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskListComponent;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Header from \"../parts/Header\";\r\nimport Footer from \"../parts/Footer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TaskListDialog from \"../parts/taskapp/TaskListDialog\";\r\nimport TaskListComponent from \"../parts/taskapp/TaskList\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport useSWR, { SWRConfig } from \"swr\";\r\n// import FormControl from \"@material-ui/core/FormControl\";\r\n// import { TextField, List } from \"@material-ui/core\";\r\n// import AddToPhotosIcon from \"@material-ui/icons/AddToPhotos\";\r\n// import styles from \"../../css/App.module.css\";\r\n// import TaskItems from \"../parts/TaskItems\";\r\n// import { Button } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\ninterface TaskList {\r\n  listId: number;\r\n  userId: number;\r\n  listTitle: String;\r\n}\r\n//返ってきたデータの型ガード\r\nconst isTaskListApiResnpose = (respons: any): respons is TaskList[] => {\r\n  return respons !== undefined;\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  lists: {\r\n    width: \"80%\",\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nconst fetcher = () =>\r\n  fetch(\"http://localhost:8090/api/tasklists\").then((r) => r.json());\r\n\r\nfunction useTaskList() {\r\n  const { data, error } = useSWR(`/api/tasklists`, fetcher, {\r\n    refreshInterval: 1000,\r\n  });\r\n  return {\r\n    data: data,\r\n    isLoading: !error && !data,\r\n    isError: error,\r\n  };\r\n}\r\n\r\nconst TaskApp: React.FC = (props) => {\r\n  const classes = useStyles();\r\n  const { data, isLoading, isError } = useTaskList();\r\n  if (isError) return <p>error</p>;\r\n  //if (isLoading) return <p>loading</p>;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header title=\"TaskApp\" />\r\n      <Link to=\"/\">メニュー</Link>\r\n      <p>TaskApp</p>\r\n      <div>\r\n        <TaskListDialog />\r\n        {isLoading ? <CircularProgress /> : <></>}\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div className={classes.lists}>\r\n        {isTaskListApiResnpose(data) ? (\r\n          data.map((listItem: TaskList) => (\r\n            <TaskListComponent\r\n              userId={listItem.userId}\r\n              listId={listItem.listId}\r\n              listTitle={listItem.listTitle}\r\n            />\r\n          ))\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskApp;\r\n","//イベント作成\r\n\r\n// interface EventAction {\r\n//   type: String;\r\n//   title: String | null;\r\n//   body: String | null;\r\n//   deleteId: number | null;\r\n//   selectList: number[];\r\n// }\r\n\r\ninterface Event {\r\n  id: number;\r\n  title: String;\r\n  body: String;\r\n}\r\n\r\nconst events = (state: Event[], action: any) => {\r\n  switch (action.type) {\r\n    case \"CREATE_EVENT\":\r\n      const event = { title: action.title, body: action.body };\r\n      const length = state.length;\r\n      let id = length === 0 ? 1 : state[length - 1].id + 1;\r\n      return [...state, { id: id, ...event }]; //最初から持っていたstateを格納してからactionの内容を格納する\r\n    case \"EDIT_EVENT\":\r\n      state.find((event) => {\r\n        if (event.id === action.id) {\r\n          event.title = action.title;\r\n          event.body = action.body;\r\n        }\r\n      });\r\n      return state;\r\n    case \"DELETE_EVENT\":\r\n      return state.filter((event) => event.id !== action.deleteId);\r\n    case \"DELETE_ALL_EVENT\":\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default events;\r\n","import React, { useState, useReducer } from \"react\";\r\nimport Header from \"../parts/Header\";\r\nimport Footer from \"../parts/Footer\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { FormControl } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport {\r\n  DataGrid,\r\n  GridColDef,\r\n  GridToolbarContainer,\r\n  GridToolbarExport,\r\n  GridCellParams,\r\n  GridRowData,\r\n  GridSelectionModel,\r\n} from \"@material-ui/data-grid\";\r\nimport reducer from \"../../reducers/index\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport styles from \"../../css/App.module.css\";\r\n\r\nconst Reduer: React.FC = (props: any) => {\r\n  const eventCustomToolbar = () => {\r\n    return (\r\n      <GridToolbarContainer>\r\n        <GridToolbarExport />\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={selectDelete}\r\n          disabled={eventCheck.length === 0}\r\n        >\r\n          選択を削除する\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={allDelete}\r\n          disabled={state.length === 0}\r\n        >\r\n          全削除\r\n        </Button>\r\n      </GridToolbarContainer>\r\n    );\r\n  };\r\n\r\n  const columns: GridColDef[] = [\r\n    { field: \"id\", headerName: \"ID\", width: 110 },\r\n    {\r\n      field: \"title\",\r\n      headerName: \"Title\",\r\n      width: 170,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"body\",\r\n      headerName: \"Body\",\r\n      width: 250,\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"delete\",\r\n      headerName: \"\",\r\n      sortable: false,\r\n      width: 130,\r\n      renderCell: (params: GridCellParams) => {\r\n        const paramsId = params.getValue(params.id, \"id\");\r\n        return (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            startIcon={<DeleteIcon />}\r\n            onClick={(event: any) => cellDelete(paramsId, false)}\r\n          >\r\n            delete\r\n          </Button>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"edit\",\r\n      headerName: \"\",\r\n      sortable: false,\r\n      renderCell: (cellValues) => {\r\n        //const paramsId = cellValues.id;\r\n        const paramsRow: GridRowData = cellValues.row;\r\n        return (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<EditIcon />}\r\n            onClick={(event: any) => cellEdit(paramsRow)}\r\n          >\r\n            Edit\r\n          </Button>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const events = [\r\n    { id: 1, title: \"test\", body: \"testBody\" },\r\n    { id: 2, title: \"テスト\", body: \"テストボディ\" },\r\n  ];\r\n\r\n  const [state, dispatch] = useReducer(reducer, events);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [eventCheck, setEventCheck] = useState<number[]>([]);\r\n  const unCreatabl: boolean = title === \"\" || body === \"\";\r\n\r\n  //stateとdisptchが返ってくる\r\n  //第一引数:作成したReducer 第二引数:デフォルトの状態としてどうしたいか 第三引数:初期化時のコールバック\r\n  //const [state, dispatch] = useReducer(reducer, initialArg, init);\r\n\r\n  const addEvent = () => {\r\n    dispatch({ type: \"CREATE_EVENT\", title, body });\r\n    setTitle(\"\");\r\n    setBody(\"\");\r\n    console.log(\"CREATE_EVENT\");\r\n  };\r\n\r\n  const allDelete = () => {\r\n    if (window.confirm(\"全て削除しても良いですか?\")) {\r\n      dispatch({ type: \"DELETE_ALL_EVENT\" });\r\n      console.log(\"DELETE_ALL_EVENT\");\r\n    }\r\n  };\r\n\r\n  const cellDelete = (Id: any, select: boolean) => {\r\n    if (select !== true) {\r\n      if (window.confirm(\"id:\" + Id + \" を削除しても良いですか?\")) {\r\n        dispatch({ type: \"DELETE_EVENT\", deleteId: Id });\r\n        console.log(\"DELETE_EVENT\");\r\n      }\r\n    } else {\r\n      dispatch({ type: \"DELETE_EVENT\", deleteId: Id });\r\n      console.log(\"DELETE_EVENT\");\r\n    }\r\n  };\r\n  const selectDelete = () => {\r\n    if (window.confirm(\"選択を削除しても良いですか?\")) {\r\n      eventCheck.map((res) => cellDelete(res, true));\r\n    }\r\n  };\r\n\r\n  const cellEdit = (params: GridRowData) => {\r\n    dispatch({\r\n      type: \"EDIT_EVENT\",\r\n      id: params.id,\r\n      title: params.title,\r\n      body: params.body,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header title=\"Reducer\" />\r\n\r\n      <div className={styles.reducerDivCommon}>\r\n        <Link to=\"/\">メニュー</Link>\r\n        <br />\r\n        <h1>イベント作成フォーム</h1>\r\n\r\n        <FormControl fullWidth>\r\n          <Grid>\r\n            <Grid item xs>\r\n              <TextField\r\n                label=\"Title\"\r\n                value={title}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  setTitle(e.target.value)\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid>\r\n              <TextField\r\n                label=\"Body\"\r\n                value={body}\r\n                fullWidth\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  setBody(e.target.value)\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <Grid container spacing={4}>\r\n            <Grid item xs>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={addEvent}\r\n                disabled={unCreatabl}\r\n              >\r\n                イベントを作成する\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </FormControl>\r\n      </div>\r\n      <br />\r\n      <div className={styles.reducerTableCommon}>\r\n        <h3>イベント一覧</h3>\r\n        <DataGrid\r\n          rows={state}\r\n          columns={columns}\r\n          checkboxSelection\r\n          disableSelectionOnClick\r\n          onSelectionModelChange={(model: any) => setEventCheck(model)}\r\n          components={{\r\n            Toolbar: eventCustomToolbar,\r\n          }}\r\n        />\r\n      </div>\r\n      <br />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reduer;\r\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport Login from \"./conponent/page/Login\";\nimport TaskApp from \"./conponent/page/TaskApp\";\nimport Reducer from \"./conponent/page/Reducer\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Route exact path=\"/\" component={App} />\n    <Route exact path=\"/login\" component={Login} />\n    <Route exact path=\"/taskApp\" component={TaskApp} />\n    <Route exact path=\"/Reducer\" component={Reducer} />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}